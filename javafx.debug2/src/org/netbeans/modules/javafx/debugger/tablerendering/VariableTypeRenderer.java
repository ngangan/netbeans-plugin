/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VariableTypeRenderer.java
 *
 * Created on Jun 13, 2010, 4:28:07 PM
 */

package org.netbeans.modules.javafx.debugger.tablerendering;

import com.sun.javafx.jdi.FXBooleanType;
import com.sun.javafx.jdi.FXFloatType;
import com.sun.javafx.jdi.FXIntegerType;
import com.sun.javafx.jdi.FXPrimitiveValue;
import com.sun.javafx.jdi.FXSequenceReference;
import com.sun.javafx.jdi.FXSequenceReference.Types;
import com.sun.javafx.jdi.FXValue;
import com.sun.jdi.Value;
import org.netbeans.api.debugger.jpda.Field;
import java.awt.Component;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellRenderer;
import org.netbeans.modules.debugger.jpda.expr.JDIVariable;

/**
 *
 * @author Michal Skvor <michal.skvor at sun.com>
 */
public class VariableTypeRenderer extends javax.swing.JPanel implements TableCellRenderer {

    private Object o;

    /** Creates new form VariableTypeRenderer */
    public VariableTypeRenderer( Object o ) {
        this.o = o;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        labelValue = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        labelValue.setText(org.openide.util.NbBundle.getMessage(VariableTypeRenderer.class, "VariableTypeRenderer.labelValue.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(labelValue, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelValue;
    // End of variables declaration//GEN-END:variables

    public Component getTableCellRendererComponent( JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column)
    {
        labelValue.setText( o.toString());
        if( o instanceof Field ) {
            Field f = (Field)o;
            JDIVariable v = (JDIVariable)f;
            Value oo = v.getJDIValue();
            FXValue fxv = (FXValue)oo;
            
//            FXField fxf = (FXField)oo.virtualMachine().classesByName( f.getClassName()).get( 0 ).fieldByName( f.getName());
            
            String fieldTypeName = f.getDeclaredType().replace( '$', '.' );

            if( fxv instanceof FXPrimitiveValue ) {
                FXPrimitiveValue ref = (FXPrimitiveValue)fxv;
                if( ref.type() instanceof FXIntegerType ) {
                    fieldTypeName = "Integer" ; // NOI18N
                } else if( ref.type() instanceof FXFloatType ) {
                    fieldTypeName = "Number"; // NOI18N
                } else if( ref.type() instanceof FXBooleanType ) {
                    fieldTypeName = "Boolean"; // NOI18N
                }
            } else if( fxv instanceof FXSequenceReference ) {
                FXSequenceReference seq = (FXSequenceReference)fxv;
                Types seqType = seq.getElementType();
                if( Types.INT.equals( seqType )) {
                    fieldTypeName = "Integer[]"; // NOI18N
                } else if( Types.OTHER.equals( seqType )) {
                    fieldTypeName = "String[]"; // NOI18N
                } else {
                    if( seqType != null ) {
                        String typeName = seqType.name().toLowerCase();
                        fieldTypeName = typeName.substring( 0, 1 ).toUpperCase() +
                                typeName.substring( 1 ) + "[]"; // NOI18N
                    } else {
                        // FIXME: Why null value is here?                       
                        fieldTypeName = "null"; // 
                    }
                }
            }
            labelValue.setText( fieldTypeName );            
        }
        if( isSelected ) {
            setBackground( UIManager.getDefaults().getColor( "Table.selectionBackground" ));
            setForeground( UIManager.getDefaults().getColor( "Table.selectionForeground" ));
            labelValue.setBackground( UIManager.getDefaults().getColor( "Table.selectionBackground" ));
            labelValue.setForeground( UIManager.getDefaults().getColor( "Table.selectionForeground" ));
        } else {
            setBackground( UIManager.getDefaults().getColor( "Table.focusCellBackground" ));
            setForeground( UIManager.getDefaults().getColor( "Table.focusCellForeground" ));
            labelValue.setBackground( UIManager.getDefaults().getColor( "Table.focusCellBackground" ));
            labelValue.setForeground( UIManager.getDefaults().getColor( "Table.focusCellForeground" ));
        }

        return this;
    }

}
