<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="javafx" basedir="." default="zip-clusters">
    <description>Builds the module suite javafx.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <target name="-is-local-netbeans">
        <available file="../nbbuild/netbeans" type="dir" property="local-netbeans-is-available"/>
    </target>

    <target name="-copy-local-netbeans" if="local-netbeans-is-available" depends="-is-local-netbeans">
        <mkdir dir="build/netbeans"/>
        <copy todir="build/netbeans">
            <fileset dir="../nbbuild/netbeans"/>
        </copy>
        <property name="netbeans.binaries.url" value="do not need to calculate"/>
    </target>

    <target name="-calculate-netbeans-url" unless="netbeans.binaries.url" depends="-copy-local-netbeans">
        <get src="${netbeans.base.url}" dest="netbeans.html" usetimestamp="${use.timestamp}" verbose="true"/>
        <loadfile srcfile="netbeans.html" property="netbeans.binaries.url">
            <filterchain>
                <tokenfilter>
                    <containsregex pattern=".*href=&quot;(netbeans-[a-z0-9-]*javase\.zip)&quot;.*" replace="${netbeans.base.url}/\1" flags="im"/>
                </tokenfilter>
            </filterchain>
        </loadfile>
        <loadfile srcfile="netbeans.html" property="netbeans.testdist.url">
            <filterchain>
                <tokenfilter>
                    <containsregex pattern=".*href=&quot;(testdist[a-z0-9-]*\.zip)&quot;.*" replace="${netbeans.base.url}/\1" flags="im"/>
                </tokenfilter>
            </filterchain>
        </loadfile>
        <echo>netbeans.binaries.url resolved to ${netbeans.binaries.url}</echo>
        <echo>netbeans.testdist.url resolved to ${netbeans.testdist.url}</echo>
    </target> 

    <target name="get-netbeans" unless="local-netbeans-is-available" depends="-calculate-netbeans-url">
        <parallel failonany="true">
            <sequential>        
                <get src="${netbeans.binaries.url}" dest="netbeans.zip" usetimestamp="${use.timestamp}" verbose="true"/>
                <unzip src="netbeans.zip" dest="build"/>
            </sequential>
            <sequential>
                <get src="${netbeans.testdist.url}" dest="testdist.zip" usetimestamp="${use.timestamp}" verbose="true"/>
                <unzip src="testdist.zip" dest="build/testdist"/>
            </sequential>
        </parallel>
    </target>

    <target name="files-init" depends="-release.files">
        <property name="release.files" value=""/>
        <property name="build.config" value="daily"/>
        <property file="build-${build.config}.properties"/>
        <property environment="env"/>
        <condition property="catalog.base.url" value="${env.HUDSON_URL}job/${env.JOB_NAME}/${env.BUILD_NUMBER}/artifact/build/updates">
            <isset property="env.HUDSON_URL"/>
        </condition>
        
        <delete dir="build"/>
        <mkdir dir="build"/>
        <property name="use.timestamp" value="true"/>
        <parallel failonany="true">
            <sequential>
	        <antcall target="get-netbeans"/>
            </sequential>
            <sequential>
                <mkdir dir="javafx.sdk.win/external"/>
                <get src="${javafx-sdk.win.url}" dest="javafx.sdk.win/external/javafx_sdk-windows.zip" usetimestamp="${use.timestamp}" verbose="true"/>
            </sequential>   
            <sequential>
                <mkdir dir="javafx.sdk.mac/external"/>
                <get src="${javafx-sdk.mac.url}" dest="javafx.sdk.mac/external/javafx_sdk-macosx.zip" usetimestamp="${use.timestamp}" verbose="true"/>
            </sequential>   
            <sequential>
                <mkdir dir="javafx.sdk.lin/external"/>
                <get src="${javafx-sdk.lin.url}" dest="javafx.sdk.lin/external/javafx_sdk-linux.zip" usetimestamp="${use.timestamp}" verbose="true"/>
            </sequential>   
            <sequential>
                <mkdir dir="javafx.sdk.sol/external"/>
                <get src="${javafx-sdk.sol.url}" dest="javafx.sdk.sol/external/javafx_sdk-solaris.zip" usetimestamp="${use.timestamp}" verbose="true"/>
            </sequential>
        </parallel>    
    </target>
    
    <target name="clean" depends="-init,testuserdir-delete" description="Clean everything.">
        <mkdir dir="build/netbeans"/>
        <subant target="clean" buildpath="${modules.sorted}" inheritrefs="false" inheritall="false"/>
        <delete dir="${dist.dir}"/>
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="build">
                <exclude name="testuserdir/"/>
            </fileset>
        </delete>
    </target>

    <target name="l10n-kit">
      <zip destfile="build/l10n.zip" basedir="." compress="true" level="9" excludesfile="l10n.excludes" includesfile="l10n.includes"/>
    </target>

    <target name="zip-clusters" depends="build">
      <mkdir dir="build/clusters"/>
      <jar destfile="build/clusters/common.jar" compress="true" level="9">
        <zipfileset dir="build/netbeans/javafx2" prefix="javafx2">
          <exclude name="javafx-sdk/**"/>
          <exclude name="**/*-mac.*"/>
          <exclude name="**/*-sol.*"/>
          <exclude name="**/*-win.*"/>
          <exclude name="**/*-lin.*"/>
        </zipfileset>
      </jar>    
      <jar destfile="build/clusters/windows.jar" compress="true" level="9">
        <zipfileset dir="build/netbeans/javafx2" prefix="javafx2">
          <exclude name="javafx-sdk/**"/>
          <include name="**/*-win.*"/>
        </zipfileset>
        <zipfileset dir="javafx.sdk.win/release" prefix="javafx2"/>
      </jar>    
      <jar destfile="build/clusters/linux.jar" compress="true" level="9">
        <zipfileset dir="build/netbeans/javafx2" prefix="javafx2">
          <exclude name="javafx-sdk/**"/>
          <include name="**/*-lin.*"/>
        </zipfileset>
        <zipfileset dir="javafx.sdk.lin/release" filemode="755" prefix="javafx2">
          <include name="javafx-sdk/bin/*"/>
          <include name="javafx-sdk/emulator/bin/*"/>
        </zipfileset>
        <zipfileset dir="javafx.sdk.lin/release" prefix="javafx2">
          <exclude name="javafx-sdk/bin/*"/>
          <exclude name="javafx-sdk/emulator/bin/*"/>
        </zipfileset>
      </jar>
      <jar destfile="build/clusters/solaris.jar" compress="true" level="9">
        <zipfileset dir="build/netbeans/javafx2" prefix="javafx2">
          <exclude name="javafx-sdk/**"/>
          <include name="**/*-sol.*"/>
        </zipfileset>
        <zipfileset dir="javafx.sdk.sol/release" filemode="755" prefix="javafx2">
          <include name="javafx-sdk/bin/*"/>
          <include name="javafx-sdk/emulator/bin/*"/>
        </zipfileset>
        <zipfileset dir="javafx.sdk.sol/release" prefix="javafx2">
          <exclude name="javafx-sdk/bin/*"/>
          <exclude name="javafx-sdk/emulator/bin/*"/>
        </zipfileset>
      </jar>
      <jar destfile="build/clusters/mac.jar" compress="true" level="9">
        <zipfileset dir="build/netbeans/javafx2" prefix="javafx2">
          <exclude name="javafx-sdk/**"/>
          <include name="**/*-mac.*"/>
        </zipfileset>
        <zipfileset dir="javafx.sdk.mac/release" filemode="755" prefix="javafx2">
          <include name="javafx-sdk/bin/*"/>
          <include name="javafx-sdk/emulator/bin/*"/>
        </zipfileset>
        <zipfileset dir="javafx.sdk.mac/release" prefix="javafx2">
          <exclude name="javafx-sdk/bin/*"/>
          <exclude name="javafx-sdk/emulator/bin/*"/>
        </zipfileset>
      </jar>
    </target>

</project>
