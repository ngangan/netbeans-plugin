LBL_DefaultPackage=&lt;standard&gt;
LBL_AnonymousClass=&lt;anonyme Klasse&gt;
LBL_Initializer=&lt;Initialisierung&gt;
LBL_Method=Methode
LBL_Field=Feld
LBL_Constructor=Konstruktor
LBL_LocalVar=Lokale Variable
LBL_Parameter=Parameter
LBL_Folder= Verzeichnis
LBL_Package=Paket
LBL_Class=Klasse
LBL_Interface=Schnittstelle

LBL_Rename=Umbenennen
DSC_Rename=Umbenennen von <b>{0}</b> nach <b>{1}</b>
LBL_NewName=Neuer Name: 
LBL_RenameComments=Auch in Kommentaren umbenennen 
LBL_RenameWithoutRefactoring=Ohne \u00dcberarbeitung umbenennen

ACSD_nameField=Neuen Namen eingeben
LBL_KeepFileNameSync=Datei entsprechend umbenennen

LBL_Project=Pr&ojekt:
LBL_Location=&Pfad\:
LBL_Scope=&Reichweite\:
LBL_AllProjects=Offene Projekte

LBL_SearchInComents=In &Kommentaren suchen
LBL_WhereUsedAction=Verwendung &anzeigen
LBL_WhereUsed=Verwendung anzeigen
LBL_UsagesOf=Benutzungen von {0}
LBL_FindUsages=Verwendung &anzeigen
LBL_FindOverridingMethods=\u00dcberschreibende Meth&oden suchen
LBL_UsagesOfBaseClass=Ab der Basisklasse [{0}] &suchen 
LBL_FindAllSubtypes=&Alle Subklassen suchen
LBL_FindDirectSubtypesOnly=Nur &Direkte Subklassen suchen
LBL_Usages=Verwendung
LBL_Refactoring=\u00dcberarbeitung

LBL_RenameWithoutRefactoring=Umbenennen ohne \u00dcbe&rarbeitung
LBL_MoveWithoutReferences=&Verschieben ohne \u00dcberarbeitung
LBL_MoveClassAction=&Verschiebe Klasse...
LBL_MovePackageAction=Paket verschieben...
LBL_MoveClass=Klasse verschieben
LBL_MoveClasses=Klassen verschieben
LBL_MoveClassesHeadline=Aufgelistete Klassen verschieben
LBL_MovePackage=Paket verschieben
DSC_MoveClass=Klasse <b>{0}</b> nach Paket <b>{1}</b> verschieben 
DSC_MovePackage=Paket <b>{0}</b> nach Paket <b>{1}</b> verschieben
LBL_MoveClassNamed=Klasse {0} verschieben
LBL_ListOfClasses=Liste der &Klassen:
LBL_MovePackageNamed=Paket {0} verschieben
LBL_ToPackage=Nach Pake&t:

LBL_DeclareFinal=
LBL_CopyClass=Klasse kopieren
LBL_CopyClasses=Klassen kopieren
DSC_CopyClass=Klasse <b>{0}</b> kopieren
LBL_CopyWithoutRefactoring=&Kopieren ohne \u00dcbe&rarbeitung
LBL_CopyClassesHeadline=Aufgef\u00fchrte Klassen kopieren
CopyClassPanel.newNameTextField.text=NewClass
CopyClassPanel.isUpdateReferences.AccessibleContext.accessibleDescription=k.A.
CopyClassPanel.newNameTextField.AccessibleContext.accessibleDescription=k.A.
CopyClassPanel.rootComboBox.AccessibleContext.accessibleDescription=k.A.
CopyClassPanel.projectsComboBox.AccessibleContext.accessibleDescription=k.A.
CopyClassPanel.updateReferencesCheckBox.AccessibleContext.accessibleDescription=k.A.
CopyClassPanel.packageComboBox.AccessibleContext.accessibleDescription=k.A.

DSC_MethodUsages=<html>Methode <b>{0}</b> der Klasse <b>{1}</b>:</html>
DSC_ClassUsages=<html>Klasse <b>{0}</b>:</html>
DSC_ConstructorUsages=<html>Konstruktor <b>{0}</b> der Klasse <b>{1}</b>:</html>
DSC_FieldUsages=<html>Feld <b>{0}</b> der Klasse <b>{1}</b>:</html>
DSC_PackageUsages=<html>Paket <b>{0}</b>:</html>
DSC_VariableUsages=<html>Variable <b>{0}</b>:</html>

DSC_WhereUsed=Verwendung von <b>{0}</b>
DSC_FindUsages=Verwendung
DSC_WhereUsedMethodOverriders=Methoden \u00dcberschreiben 
DSC_WhereUsedFromBaseClass=Ab der Basisklasse suchen
DSC_WhereUsedFindAllSubTypes=Alle Subtypen von <b>{0}</b> suchen
DSC_WhereUsedFindDirectSubTypes=Direkte Subtypen von <b>{0}</b> suchen
DSC_WhereUsedOf=von <b>{0}</b>
DSC_And=und

ACSD_subclasses=k.A.
ACSD_usages=k.A.
ACSD_directOnly=k.A.
ACSD_isBaseClass=k.A.
ACSD_overriders=k.A.
ACSD_projectsCombo=k.A.
ACSD_rootCombo=k.A.
MoveClassPanel.updateReferencesCheckBox.AccessibleContext.accessibleDescription=k.A.
MoveClassPanel.packageComboBox.AccessibleContext.accessibleDescription=k.A.

# --- SAFE DELETE REFACTORING --------------------------------------------------
# Refactoring name
LBL_SafeDel=Sicheres L\u00f6schen
# Refactoring description (0 = Name(s) of Elements to be deleted)
DSC_SafeDel=Elemente l\u00f6schen und ggf. Referenzen behalten.
DSC_SafeDelClasses=Klassen l\u00f6schen und ggf. Referenzen behalten.
DSC_SafeDelMethod=Methode <b>{0}</b> l\u00f6schen und ggf. Referenzen auf die Methode behalten.
DSC_SafeDelMethods=Methode l\u00f6schen und ggf. Referenzen darauf behalten.
DSC_SafeDelProblem=Es gibt Referenzen zu <b>{0}</b>.
DSC_SafeDelPkg=Paket <b>{0}</b> und seinen Inhalt l\u00f6schen.
# Action label

LBL_SafeDel_Delete=L\u00f6schen
LBL_SafeDel_Classes=<html>Nach Benutzungen suchen und {0} Klassen l\u00f6schen</html>
LBL_SafeDel_Elements=<html>Nach Benutzungen suchen und {0} Elemente l\u00f6schen</html>
LBL_SafeDel_RegularDelete=<html>L\u00f6sche {0} Klassen</html>
LBL_SafeDel_RegularDeleteElement=<html>L\u00f6sche {0}</html>
LBL_SafeDel_Element=<html>Nach Benutzungen suchen und <b>{0}</b> l\u00f6schen.</html>
LBL_SafeDelCheckBox=&Sicheres l\u00f6schen (mit Suche nach Benutzungen)
LBL_SafeDelHeader=<html><b>{0}</b> sicher l\u00f6schen</html>
LBL_SafeDelInComents=In &Kommentaren suchen
LBL_SafeDelRefWarning=<html>Warnung: Versuch <b>{0}</b> aus einer Referenz zu l\u00f6schen.</html>
LBL_SafeDelConstructor=<html>Sicheres L\u00f6schen des Konstruktors <b>{0}</b> der Klasse <b>{1}</b>.</html>
LBL_SafeDelVariable=<html>Sicheres L\u00f6schen  der Variablen <b>{0}</b>.</html>
LBL_SafeDelMethod=<html>Sicheres L\u00f6schen der Methode <b>{0}</b> der Klasse <b>{1}</b>.</html>
LBL_SafeDelField=<html>Sicheres L\u00f6schen des Feldes <b>{0}</b> der Klasse <b>{1}</b>. </html>
LBL_SafeDelPkg=<html>L\u00f6schen von Paket <b>{0}</b> und seines Inhalts.</html>
LBL_SafeDelFolder=<html>Sicheres L\u00f6schen von Verzeichnis <b>{0}</b> und seines Inhalts.</html>
SafeDeletePanel.safeDelete.AccessibleContext.accessibleDescription=k.A.

MSG_NoClasspath=Klassenpfad f\u00fcr {0} kann nicht gefunden werden

