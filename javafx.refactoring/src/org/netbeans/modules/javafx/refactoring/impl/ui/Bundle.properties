LBL_DefaultPackage=&lt;default&gt;
LBL_AnonymousClass=&lt;anonymous class&gt;
LBL_Initializer=&lt;initializer&gt;
LBL_Method=Method
LBL_Field=Field
LBL_Constructor=Constructor
LBL_LocalVar=Local Variable
LBL_Parameter=Parameter
LBL_Folder=Folder
LBL_Package=Package
LBL_Class=Class
LBL_Interface=Interface

LBL_Rename=Rename
DSC_Rename=Rename <b>{0}</b> to <b>{1}</b>
LBL_NewName=New Name: 
LBL_RenameComments=Apply Rename on Comments
LBL_RenameWithoutRefactoring=Rename Without Refactoring

ACSD_nameField=Type new name
LBL_KeepFileNameSync=Rename File Accordingly

LBL_Project=Pr&oject:
LBL_Location=&Location\:
LBL_Scope=Sco&pe\:
LBL_AllProjects=Open Projects

LBL_SearchInComents=Search in &Comments
LBL_WhereUsedAction=Fi&nd Usages
LBL_WhereUsed=Find Usages
LBL_UsagesOf=Usages of {0}
LBL_FindUsages=Find &Usages
LBL_FindOverridingMethods=Find &Overriding Methods
LBL_UsagesOfBaseClass=&Search from Base Class [{0}]
LBL_FindAllSubtypes=Find &All Subtypes
LBL_FindDirectSubtypesOnly=Find &Direct Subtypes Only
LBL_Usages=Usages
LBL_Refactoring=Refactoring

LBL_RenameWithoutRefactoring=Rename &Without Refactoring
LBL_MoveWithoutReferences=Move &Without Refactoring
LBL_MoveClassAction=Move &Class...
LBL_MovePackageAction=Move Package...
LBL_MoveClass=Move Class
LBL_MoveClasses=Move Classes
LBL_MoveClassesHeadline=Move listed classes
LBL_MovePackage=Move Package
DSC_MoveClass=Move class <b>{0}</b> to <b>{1}</b> package
DSC_MovePackage=Move package <b>{0}</b> to <b>{1}</b> package
LBL_MoveClassNamed=Move class {0}
LBL_ListOfClasses=List of &Classes:
LBL_MovePackageNamed=Move package {0}
LBL_ToPackage=&To Package:

LBL_DeclareFinal=
LBL_CopyClass=Copy Class
LBL_CopyClasses=Copy Classes
DSC_CopyClass=Copy Class <b>{0}</b>
LBL_CopyWithoutRefactoring=&Copy Without Refactoring
LBL_CopyClassesHeadline=Copy listed classes
CopyClassPanel.newNameTextField.text=NewClass
CopyClassPanel.isUpdateReferences.AccessibleContext.accessibleDescription=N/A
CopyClassPanel.newNameTextField.AccessibleContext.accessibleDescription=N/A
CopyClassPanel.rootComboBox.AccessibleContext.accessibleDescription=N/A
CopyClassPanel.projectsComboBox.AccessibleContext.accessibleDescription=N/A
CopyClassPanel.updateReferencesCheckBox.AccessibleContext.accessibleDescription=N/A
CopyClassPanel.packageComboBox.AccessibleContext.accessibleDescription=N/A

DSC_MethodUsages=<html>Method <b>{0}</b> of class <b>{1}</b></html>
DSC_ClassUsages=<html>Class <b>{0}</b></html>
DSC_ConstructorUsages=<html>Constructor <b>{0}</b> of class <b>{1}</b></html>
DSC_FieldUsages=<html>Field <b>{0}</b> of class <b>{1}</b></html>
DSC_PackageUsages=<html>Package <b>{0}</b></html>
DSC_VariableUsages=<html>Variable <b>{0}</b></html>

DSC_WhereUsed=Usages of <b>{0}</b>
DSC_FindUsages=Usages
DSC_WhereUsedMethodOverriders=Overriding Methods
DSC_WhereUsedFromBaseClass=Search From Base Class
DSC_WhereUsedFindAllSubTypes=Find All SubTypes of <b>{0}</b>
DSC_WhereUsedFindDirectSubTypes=Find Direct SubTypes of <b>{0}</b>
DSC_WhereUsedOf=of <b>{0}</b>
DSC_And=and

ACSD_subclasses=N/A
ACSD_usages=N/A
ACSD_directOnly=N/A
ACSD_isBaseClass=N/A
ACSD_overriders=N/A
ACSD_projectsCombo=N/A
ACSD_rootCombo=N/A
MoveClassPanel.updateReferencesCheckBox.AccessibleContext.accessibleDescription=N/A
MoveClassPanel.packageComboBox.AccessibleContext.accessibleDescription=N/A

# --- SAFE DELETE REFACTORING --------------------------------------------------
# Refactoring name
LBL_SafeDel=Safely Delete
# Refactoring description (0 = Name(s) of Elements to be deleted)
DSC_SafeDel=Delete element(s) and keep references to them, if any.
DSC_SafeDelClasses=Delete classes and and keep references to them, if any.
DSC_SafeDelMethod=Delete method <b>{0}</b> and keep references to that method, if any.
DSC_SafeDelMethods=Delete methods and keep keep references to them, if any.
DSC_SafeDelProblem=There are references to <b>{0}</b>.
DSC_SafeDelPkg=Delete package <b>{0}</b> and its contents.
# Action label

LBL_SafeDel_Delete=Delete
LBL_SafeDel_Classes=<html>Search for usages and delete {0} classes</html>
LBL_SafeDel_Elements=<html>Search for usages and delete {0} elements</html>
LBL_SafeDel_RegularDelete=<html>Delete {0} classes</html>
LBL_SafeDel_RegularDeleteElement=<html>Delete {0}</html>
LBL_SafeDel_Element=<html>Search for usages and delete <b>{0}</b>.</html>
LBL_SafeDelCheckBox=Sa&fely delete (with usage search)
LBL_SafeDelHeader=<html>Safely delete <b>{0}</b>.</html>
LBL_SafeDelInComents=&Search In Comments
LBL_SafeDelRefWarning=<html>Warning: Attempting to delete <b>{0}</b> from a reference.</html>
LBL_SafeDelConstructor=<html>Safely delete constructor <b>{0}</b> of class <b>{1}</b>.</html>
LBL_SafeDelVariable=<html>Safely delete variable <b>{0}</b>.</html>
LBL_SafeDelMethod=<html>Safely delete method <b>{0}</b> of class <b>{1}</b>.</html>
LBL_SafeDelField=<html>Safely delete field <b>{0}</b> of class <b>{1}</b>.</html>
LBL_SafeDelPkg=<html>Delete package <b>{0}</b> and its contents.</html>
LBL_SafeDelFolder=<html>Safely delete folder <b>{0}</b> and its contents.</html>
SafeDeletePanel.safeDelete.AccessibleContext.accessibleDescription=N/A

MSG_NoClasspath=Cannot find classpath for {0}
