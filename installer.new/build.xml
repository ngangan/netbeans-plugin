<project name="javafx-plugin-installers" default="build-installers">
  
  <property name="javafx.version" value="1.5.0.0.70"/>
  
  <target name="clean">
    <delete dir="build"/>
    <delete dir="../build/installers"/>
  </target>
  
  <target name="download-javase" depends="clean">
      <property name="build.config" value="daily"/>
      <property file="../build-${build.config}.properties"/>
      <mkdir dir="external"/>
      <get src="${netbeans.windows.installer.url}" dest="external/netbeans-javase-windows.exe" usetimestamp="true" verbose="true"/>
      <get src="${netbeans.linux.installer.url}" dest="external/netbeans-javase-linux.sh" usetimestamp="true" verbose="true"/>
  </target>
  
  <target name="unzip-javase" depends="download-javase">
    <mkdir dir="build/linux"/>
    <exec executable="unzip">
      <arg file="external/netbeans-javase-windows.exe"/>
      <arg value="-d"/>
      <arg file="build/windows"/>
    </exec>
    <mkdir dir="build/linux"/>
    <exec executable="unzip">
      <arg file="external/netbeans-javase-linux.sh"/>
      <arg value="-d"/>
      <arg file="build/linux"/>
    </exec>
  </target>
  
  <target name="build-logic" depends="unzip-javase">
    <mkdir dir="build/logic"/>
    <javac srcdir="logic-src" destdir="build/logic" classpath="build/windows"/>
    <jar destfile="build/logic.jar">
      <fileset dir="logic-src" excludes="**/*.java"/>
      <fileset dir="build/logic"/>
      <manifest>
        <attribute name="Configuration-Logic-Class" value="org.netbeans.installer.products.nb.javafx.ConfigurationLogic"/>
      </manifest>
    </jar>  
  </target>

  <target name="build-data">
    <mkdir dir="build/data/common-cluster/javafx2"/>
    <copy todir="build/data/common-cluster/javafx2">
      <fileset dir="../build/netbeans/javafx2">
        <exclude name="javafx-sdk/**"/>
        <exclude name="**/*-mac.*"/>
        <exclude name="**/*-sol.*"/>
        <exclude name="**/*-win.*"/>
        <exclude name="**/*-lin.*"/>
      </fileset>  
    </copy>
    <mkdir dir="build/data/win-cluster/javafx2"/>
    <copy todir="build/data/win-cluster/javafx2">
      <fileset dir="../build/netbeans/javafx2">
        <exclude name="javafx-sdk/**"/>
        <include name="**/*-win.*"/>
      </fileset>
      <fileset dir="../javafx.sdk.win/release"/>  
    </copy>
    <mkdir dir="build/data/lin-cluster/javafx2"/>
    <copy todir="build/data/lin-cluster/javafx2">
      <fileset dir="../build/netbeans/javafx2">
        <exclude name="javafx-sdk/**"/>
        <include name="**/*-lin.*"/>
      </fileset>
      <fileset dir="../javafx.sdk.lin/release"/>  
    </copy>
    <mkdir dir="build/data/common-cluster/META-INF"/>
    <antcall target="-list-files">
      <param name="list.file" location="build/data/common-cluster/META-INF/files.list"/>
      <param name="dir" location="build/data/common-cluster"/>
    </antcall>
    <mkdir dir="build/data/win-cluster/META-INF"/>
    <antcall target="-list-files">
      <param name="list.file" location="build/data/win-cluster/META-INF/files.list"/>
      <param name="dir" location="build/data/win-cluster"/>
    </antcall>
    <mkdir dir="build/data/lin-cluster/META-INF"/>
    <antcall target="-list-files">
      <param name="list.file" location="build/data/lin-cluster/META-INF/files.list"/>
      <param name="dir" location="build/data/lin-cluster"/>
    </antcall>
  </target>

  <target name="build-javafx-package" depends="build-logic,build-data">
    <mkdir dir="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data"/>
    <jar destfile="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,1.jar" basedir="build/data/common-cluster" compress="true" level="9"/>
    <jar destfile="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,2.jar" basedir="build/data/win-cluster" compress="true" level="9"/>
    <mkdir dir="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data"/>
    <jar destfile="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,1.jar" basedir="build/data/common-cluster" compress="true" level="9"/>
    <jar destfile="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,2.jar" compress="true" level="9">
      <zipfileset dir="build/data/lin-cluster" filemode="755">
        <include name="javafx-sdk/bin/*"/>
      </zipfileset>
      <zipfileset dir="build/data/lin-cluster">
        <exclude name="javafx-sdk/bin/*"/>
      </zipfileset>
    </jar>
    <copy file="build/logic.jar" tofile="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/logic/logic,1.jar"/>
    <copy file="build/logic.jar" tofile="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/logic/logic,1.jar"/>
    <copy file="resources/icon.png" tofile="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/icon.png"/>
    <copy file="resources/icon.png" tofile="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/icon.png"/>
  </target>

  <target name="build-registry" depends="build-javafx-package">
    <property name="base.version" value="6.5.1.0.200903060201"/>
    <script language="javascript"><![CDATA[
      project.setProperty("timestamp", java.util.Calendar.getInstance().getTimeInMillis());
      project.setProperty("base.win.version", project.resolveFile("build/windows/data/nb-base").list()[0]);
      project.setProperty("javase.win.version", project.resolveFile("build/windows/data/nb-javase").list()[0]);
      project.setProperty("base.lin.version", project.resolveFile("build/linux/data/nb-base").list()[0]);
      project.setProperty("javase.lin.version", project.resolveFile("build/linux/data/nb-javase").list()[0]);
    ]]></script>
    <checksum property="icon.md5" file="resources/icon.png" algorithm="MD5"/>
    <length property="icon.length" file="resources/icon.png"/>
    <checksum property="logic.md5" file="build/logic.jar" algorithm="MD5"/>
    <length property="logic.length" file="build/logic.jar"/>
    <checksum property="data1.win.md5" file="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,1.jar" algorithm="MD5"/>
    <length property="data1.win.length" file="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,1.jar"/>
    <checksum property="data2.win.md5" file="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,2.jar" algorithm="MD5"/>
    <length property="data2.win.length" file="build/windows/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,2.jar"/>
    <checksum property="data1.lin.md5" file="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,1.jar" algorithm="MD5"/>
    <length property="data1.lin.length" file="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,1.jar"/>
    <checksum property="data2.lin.md5" file="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,2.jar" algorithm="MD5"/>
    <length property="data2.lin.length" file="build/linux/data/nb-javafx/${javafx.version}/windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86/data/data,2.jar"/>
    <length property="disk-space.win">
      <fileset dir="build/data/common-cluster"/>
      <fileset dir="build/data/win-cluster"/>
    </length>
    <length property="disk-space.lin">
      <fileset dir="build/data/common-cluster"/>
      <fileset dir="build/data/lin-cluster"/>
    </length>
    <echoxml file="build/data/fx-registry-windows.xml">
        <product built="${timestamp}" expand="false" features="" offset="20000" platforms="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="not-installed" uid="nb-javafx" version="${javafx.version}" visible="true">
            <display-name>
                <default>JavaFX Plugin</default>
            </display-name>
            <description>
                <default>JavaFX plugin for NetBeans IDE</default>
            </description>
            <icon md5="${icon.md5}" size="${icon.length}">
                <default-uri>resource:data/nb-javafx/${javafx.version}/windows%20linux%20solaris-sparc%20solaris-x86%20macosx-ppc%20macosx-x86/icon.png</default-uri>
            </icon>
            <configuration-logic>
                <file md5="${logic.md5}" size="${logic.length}">
                    <default-uri>resource:data/nb-javafx/${javafx.version}/windows%20linux%20solaris-sparc%20solaris-x86%20macosx-ppc%20macosx-x86/logic/logic,1.jar</default-uri>
                </file>
            </configuration-logic>
            <installation-data>
                <file md5="${data1.win.md5}" size="${data1.win.length}">
                    <default-uri>resource:data/nb-javafx/${javafx.version}/windows%20linux%20solaris-sparc%20solaris-x86%20macosx-ppc%20macosx-x86/data/data,1.jar</default-uri>
                </file>
                <file md5="${data2.win.md5}" size="${data2.win.length}">
                    <default-uri>resource:data/nb-javafx/${javafx.version}/windows%20linux%20solaris-sparc%20solaris-x86%20macosx-ppc%20macosx-x86/data/data,2.jar</default-uri>
                </file>
            </installation-data>
            <system-requirements>
                <disk-space>${disk-space.win}</disk-space>
            </system-requirements>
            <dependencies>
                <requirement uid="nb-base" version-lower="${base.win.version}" version-upper="${base.win.version}"/>
                <requirement uid="nb-javase" version-lower="${javase.win.version}" version-upper="${javase.win.version}"/>
            </dependencies>
        </product>
    </echoxml>
    <echoxml file="build/data/fx-registry-linux.xml">
        <product built="${timestamp}" expand="false" features="" offset="20000" platforms="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="not-installed" uid="nb-javafx" version="${javafx.version}" visible="true">
            <display-name>
                <default>JavaFX Plugin</default>
            </display-name>
            <description>
                <default>JavaFX plugin for NetBeans IDE</default>
            </description>
            <icon md5="${icon.md5}" size="${icon.length}">
                <default-uri>resource:data/nb-javafx/${javafx.version}/windows%20linux%20solaris-sparc%20solaris-x86%20macosx-ppc%20macosx-x86/icon.png</default-uri>
            </icon>
            <configuration-logic>
                <file md5="${logic.md5}" size="${logic.length}">
                    <default-uri>resource:data/nb-javafx/${javafx.version}/windows%20linux%20solaris-sparc%20solaris-x86%20macosx-ppc%20macosx-x86/logic/logic,1.jar</default-uri>
                </file>
            </configuration-logic>
            <installation-data>
                <file md5="${data1.lin.md5}" size="${data1.lin.length}">
                    <default-uri>resource:data/nb-javafx/${javafx.version}/windows%20linux%20solaris-sparc%20solaris-x86%20macosx-ppc%20macosx-x86/data/data,1.jar</default-uri>
                </file>
                <file md5="${data2.lin.md5}" size="${data2.lin.length}">
                    <default-uri>resource:data/nb-javafx/${javafx.version}/windows%20linux%20solaris-sparc%20solaris-x86%20macosx-ppc%20macosx-x86/data/data,2.jar</default-uri>
                </file>
            </installation-data>
            <system-requirements>
                <disk-space>${disk-space.lin}</disk-space>
            </system-requirements>
            <dependencies>
                <requirement uid="nb-base" version-lower="${base.lin.version}" version-upper="${base.lin.version}"/>
                <requirement uid="nb-javase" version-lower="${javase.lin.version}" version-upper="${javase.lin.version}"/>
            </dependencies>
        </product>
    </echoxml>
  </target>
  
  <target name="patch" depends="build-javafx-package,build-registry">
    <propertyfile file="build/windows/data/engine.properties">
      <entry  key="nbi.overall.license.resource" value="$S{nbi.overall.license.javafx.resource}"/>
      <entry  key="NWP.welcome.page.type" value="javafx"/>
    </propertyfile>
    <propertyfile file="build/linux/data/engine.properties">
      <entry  key="nbi.overall.license.resource" value="$S{nbi.overall.license.javafx.resource}"/>
      <entry  key="NWP.welcome.page.type" value="javafx"/>
    </propertyfile>
    <loadfile property="original.registry.win" srcfile="build/windows/data/registry.xml">
      <filterchain>
        <linecontains negate="true">
          <contains value="/components>"/>
        </linecontains>  
        <linecontains negate="true">
          <contains value="/registry>"/>
        </linecontains>  
      </filterchain>
    </loadfile>
    <loadfile property="original.registry.lin" srcfile="build/linux/data/registry.xml">
      <filterchain>
        <linecontains negate="true">
          <contains value="/components>"/>
        </linecontains>  
        <linecontains negate="true">
          <contains value="/registry>"/>
        </linecontains>  
      </filterchain>
    </loadfile>
    <loadfile property="javafx.registry.win" srcfile="build/data/fx-registry-windows.xml">
      <filterchain>
        <headfilter lines="-1" skip="1"/>
      </filterchain>
    </loadfile>
    <loadfile property="javafx.registry.lin" srcfile="build/data/fx-registry-linux.xml">
      <filterchain>
        <headfilter lines="-1" skip="1"/>
      </filterchain>
    </loadfile>
    <echo file="build/windows/data/registry.xml"><![CDATA[${original.registry.win}${javafx.registry.win}</components></registry>]]></echo>    
    <echo file="build/linux/data/registry.xml"><![CDATA[${original.registry.lin}${javafx.registry.lin}</components></registry>]]></echo>    
    <copy todir="build/windows" overwrite="true">
      <fileset dir="patch-src"/>
    </copy>
    <copy todir="build/linux" overwrite="true">
      <fileset dir="patch-src"/>
    </copy>
  </target>
  
  <target name="jar-installers" depends="patch">
    <zip destfile="build/netbeans-6.5.1-javafx-windows.jar" compress="true" level="9" basedir="build/windows"/>
    <zip destfile="build/netbeans-6.5.1-javafx-linux.jar" compress="true" level="9" basedir="build/linux"/>
  </target>

  <target name="build-installers" depends="jar-installers">
    <mkdir dir="../build/installers"/>
    <java jar="build/netbeans-6.5.1-javafx-windows.jar" fork="true">
      <arg value="--platform"/>
      <arg value="windows"/>
      <arg value="--silent"/>
      <arg value="--create-bundle"/>
      <arg file="../build/installers/netbeans-6.5.1-javafx-windows.jar"/>
      <arg value="--ignore-lock"/>
      <arg value="--userdir"/>
      <arg file="build/userdir-windows"/>
    </java>
    <java jar="build/netbeans-6.5.1-javafx-linux.jar" fork="true">
      <arg value="--platform"/>
      <arg value="linux"/>
      <arg value="--silent"/>
      <arg value="--create-bundle"/>
      <arg file="../build/installers/netbeans-6.5.1-javafx-linux.jar"/>
      <arg value="--ignore-lock"/>
      <arg value="--userdir"/>
      <arg file="build/userdir-linux"/>
    </java>
  </target>


<!-- helper subroutines -->
  <target name="-list-files">
      <fileset id="fileset" dir="${dir}"/>
      <echo file="${list.file}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<files-list>]]>   
</echo>
      <script language="javascript"><![CDATA[
      importClass(java.io.File);
      fileset = project.getReference("fileset");
      basedir  = fileset.getDir(project);
      srcDirs = fileset.getDirectoryScanner(project).getIncludedDirectories();
      for (i=0; i<srcDirs.length; i++) {
        dir = new File(basedir, srcDirs[i]);
        call = project.createTask("antcall");
        call.setTarget("-list-dir");
        p1 = call.createParam(); p1.setName("name");    p1.setValue(srcDirs[i].replace('\\', '/'));
        p2 = call.createParam(); p2.setName("lastMod"); p2.setValue(dir.lastModified());
        p3 = call.createParam(); p3.setName("empty");   p3.setValue(dir.list().length == 0);
        call.perform();
      }
      srcFiles = fileset.getDirectoryScanner(project).getIncludedFiles();
      for (i=0; i<srcFiles.length; i++) {
        var name = srcFiles[i];
        var file = new File(basedir, name);
        call = project.createTask("antcall");
        call.setInheritAll(false);
        call.setTarget("-list-file");
        var p1 = call.createParam(); p1.setName("file");    p1.setLocation(file);
        var p2 = call.createParam(); p2.setName("name");    p2.setValue(name.replace('\\', '/'));
        var p3 = call.createParam(); p3.setName("lastMod"); p3.setValue(file.lastModified());
        call.perform();
      }
    ]]></script>
      <echo file="${list.file}" append="true"><![CDATA[</files-list>]]></echo>
  </target>  
  
  <target name="-list-dir">
    <echoxml file="${list.file}" append="true">  <entry type="directory" modified="${lastMod}" empty="${empty}" permissions="755">${name}/</entry></echoxml>
  </target>

  <target name="-list-file">
    <checksum property="md5" file="${file}" algorithm="MD5"/>
    <length property="length" file="${file}"/>
    <condition property="permissions" value="755" else="644">
      <contains string="${name}" substring="javafx2/javafx-sdk/bin/"/>
    </condition>
    <echoxml file="${list.file}" append="true">  <entry type="file" size="${length}" md5="${md5}" jar="false" packed="false" signed="false" modified="${lastMod}" permissions="${permissions}">${name}</entry></echoxml>
  </target>

</project>