L_Thread_Breakpoint_Type=\u3010Stop &On:\u3011
ACSD_L_Line_Breakpoint_File_Name=\u3010File\u3011
ACSD_TF_Field_Breakpoint_Condition=
L_Line_Breakpoint_Condition=\u3010Co&ndition:\u3011
ConditionsPanel.classExcludeFilterLabel.text=\u3010E&xclude Classes:\u3011
TTT_ExceptionClassName=\u3010The class name representing the exception.\u3011
TTT_TF_Line_Breakpoint_Condition=\u3010Breakpoint hits if the expression evaluates to true\u3011
CTL_Thread_Breakpoint_Print_Text=\u3010Thread breakpoint hit by thread {threadName}.\u3011
MSG_Bad_Hit_Count_Filter_Spec=\u3010Wrong value of hit count filter: ''{0}''.\u3011
TTT_CB_Exception_Breakpoint_Class_Name=\u3010Select name of exception class here.\u3011
MSG_No_Exception_Class_Name_Spec=\u3010Exception Class Name should be specified.\u3011
TTT_CB_Classes_Excluded=\u3010Restrict this breakpoint on all but these excluded classes.\u3011
TTT_TF_Field_Breakpoint_Field_Name=\u3010Enter name of field here.\u3011
LBL_CB_Actions_Panel_Suspend_Current=\u3010Breakpoint thread\u3011
LBL_Class_Breakpoint_Type_Prepare=\u3010Class Load\u3011
ACSD_TF_Class_Breakpoint_Class_Name=
L_Field_Breakpoint_Field_Name=\u3010&Field Name:\u3011
ACSD_TF_Line_Breakpoint_Condition=\u3010Condition\u3011
TTT_CB_Classes_Filter_Throwing=\u3010Allows to restrict this breakpoint on specific classes that throw the exception.\u3011
TTT_TF_Field_Breakpoint_Condition=\u3010Write Java expression here.\u3011
Method_Breakpoint_ALL_METHODS=\u3010<all methods>\u3011
MSG_No_Hit_Count_Filter_Spec=\u3010No hit count filter is specified.\u3011
MSG_No_Line_Number_Spec=\u3010Line number should be specified.\u3011
LBL_HitCountFilter=\u3010Break when hit count\u3011
ACSN_MethodBreakpointPanel=\u3010Method Breakpoint Settings\u3011
L_Class_Breakpoint_Type=\u3010Stop &On:\u3011
L_Line_Breakpoint_BorderTitle=\u3010Settings\u3011
LBL_Method_Breakpoint_Type_Entry=\u3010Method Entry\u3011
TTT_TF_Field_Breakpoint_Class_Name=\u3010Enter name of class here.\u3011
CTL_Thread_event_type_name=\u3010Thread\u3011
ACSD_TF_Field_Breakpoint_Field_Name=
L_Method_Breakpoint_Type=\u3010Stop &On:\u3011
LBL_ClassExclusionFilter=\u3010Class Exclusion Filter:\u3011
CTL_Class_event_type_name=\u3010Class\u3011
TTT_CB_Class_Breakpoint_Exclusion_Filter=\u3010Hit all classes but these matching the filter.\u3011
L_Field_Breakpoint_BorderTitle=\u3010Settings\u3011
L_Field_Breakpoint_Class_Name=\u3010&Class Name:\u3011
ConditionsPanel.cbWhenHitCount.multiple=\u3010is multiple of\u3011
TTT_CB_Actions_Panel_Suspend=\u3010The suspend mode.\u3011
ConditionsPanel.spCondition.toolTipText=\u3010Condition\u3011
ConditionsPanel.conditionCheckBox.text=\u3010Co&ndition:\u3011
ACSD_L_Field_Breakpoint_Condition=
MSG_TooBig_Line_Number_Spec=\u3010The line number {0} is too big. Maximum line number is {1}.\u3011
L_Class_Breakpoint_BorderTitle=\u3010Settings\u3011
CB_Method_Breakpoint_All_Methods=\u3010All Methods for &Given Class\u3011
MSG_No_Class_or_Field_Name_Spec=\u3010Class Name and Field Name should be specified.\u3011
L_Line_Breakpoint_File_Name=\u3010&File:\u3011
ACSD_Actions=\u3010Actions performed when the breakpoint is hit.\u3011
ACSD_Conditions=\u3010Conditions determining when the breakpoint is hit.\u3011
ACSD_L_Method_Breakpoint_Method_Name=
TTT_CB_Classes_Matched=\u3010Restrict this breakpoint on specific classes.\u3011
ACSD_TF_Class_Breakpoint_Package_Name=
L_Actions_Panel_Print_Text=\u3010Print &Text:\u3011
LBL_CB_Actions_Panel_Suspend_None=\u3010No thread (continue)\u3011
ACSD_PrintText=\u3010The text to print when the breakpoint is hit.\u3011
ACSD_L_Class_Breakpoint_Class_Name=
TTT_TF_Line_Breakpoint_File_Name=\u3010File Name\u3011
L_Method_Breakpoint_Package_Name=\u3010&Package Name:\u3011
ACSD_Method_Breakpoint_ClassName=\u3010Enter the class name the method is defined in.\u3011
ACSD_L_Class_Breakpoint_filter_hint=
ACSD_TF_Field_Breakpoint_Class_Name=
TTT_TF_Method_Breakpoint_Method_Name=\u3010Enter name of method here.\u3011
ACSD_IncludeClasses_LBL=\u3010The classes to match\u3011
ACSN_HitCountTF=\u3010The hit count number.\u3011
L_Actions_Panel_BorderTitle=\u3010Actions\u3011
L_Field_Breakpoint_Condition=\u3010Co&ndition:\u3011
CTL_Variable_event_type_name=\u3010Field\u3011
L_Exception_Breakpoint_Type=\u3010Stop &On:\u3011
LBL_Class_Breakpoint_Type_Unload=\u3010Class Unload\u3011
ASCD_L_Class_Breakpoint_Type=
TTT_TF_Method_Breakpoint_Class_Name=\u3010Enter name of class here.\u3011
TTT_CB_Thread_Breakpoint_Type=\u3010Select type of breakpoint here.\u3011
L_Class_Breakpoint_filter_hint=\u3010Class Filter (Set exclusion / non-exclusion filter for classes)\u3011
TTT_CB_Method_Breakpoint_All_Methods=\u3010Check if you would like to stop in all methods in given class.\u3011
MSG_No_Class_Name_Spec=\u3010Class Name should be specified.\u3011
TTT_TF_Line_Breakpoint_Line_Number=\u3010Line number to stop at\u3011
ACSD_TF_Line_Breakpoint_File_Name=\u3010File\u3011
ACSN_ExceptionBreakpoint=\u3010Exception Breakpoint properties\u3011
L_Field_Breakpoint_Type=\u3010Stop &On:\u3011
ACSD_TF_Field_Breakpoint_Package_Name=
LBL_CB_Actions_Panel_Suspend_All=\u3010All threads\u3011
L_Method_Breakpoint_Method_Name=\u3010&Method Name:\u3011
ASCD_CB_Actions_Panel_Suspend=
ACSD_L_Field_Breakpoint_Field_Name=
L_Line_Breakpoint_Line_Number=\u3010L&ine number:\u3011
ACSD_L_Exception_Breakpoint_Class_Name=
ACSD_CB_Thread_Breakpoint_Type=
ACSN_LineBreakpoint=\u3010Line Breakpoint properties\u3011
ACSN_FieldBreakpoint=\u3010Field Breakpoint properties\u3011
TTT_TF_Exception_Breakpoint_Condition=\u3010Write Java expression here.\u3011
LBL_Field_Breakpoint_Type_Modification=\u3010Field Modification\u3011
ConditionsPanel.cbWhenHitCount.text=\u3010B&reak when hit count\u3011
TTT_ClassFilter=\u3010Restricts to locations in classes whose names match this filter.\u3011
TTT_TF_Method_Breakpoint_Condition=\u3010Write Java expression here. A special "return" variable name can be used to reference returned value from method exit breakpoints.\u3011
LBL_Thread_Breakpoint_Type_Death=\u3010Thread Death\u3011
CTL_Method_event_type_name=\u3010Method\u3011
CTL_Line_Breakpoint_Print_Text=\u3010Breakpoint hit at line {lineNumber} in class {className} by thread {threadName}.\u3011
ACSD_L_Exception_Breakpoint_Condition=
LBL_Exception_Breakpoint_Type_Catched=\u3010Caught\u3011
ASCD_L_Exception_Breakpoint_Type=
ACSD_TF_Exception_Breakpoint_Condition=
CB_Class_Breakpoint_Exclusion_Filter=\u3010&Exclusion Filter\u3011
MSG_No_Condition_Spec=\u3010An empty condition is specified.\u3011
CTL_Exception_event_name_type_name=\u3010Exception\u3011
ACSD_ExcludeClasses_LBL=\u3010The classes to exclude\u3011
ACSD_TF_Line_Breakpoint_Line_Number=\u3010Line number\u3011
L_Method_Breakpoint_Condition=\u3010Co&ndition:\u3011
ACSD_L_Field_Breakpoint_Type=
L_Exception_Breakpoint_Package_Name=\u3010&Package Name:\u3011
L_Exception_Breakpoint_Class_Name=\u3010&Exception Class Name:\u3011
ACSD_TF_Method_Breakpoint_Class_Name=
ACSN_ConditionTF=\u3010The condition expression.\u3011
ACSD_CB_Exception_Breakpoint_Type=
TTT_CB_Exception_Breakpoint_Type=\u3010Select type of event this breakpoint should stop on.\u3011
LBL_ClassFilter=\u3010Class Filter:\u3011
L_Exception_Breakpoint_BorderTitle=\u3010Settings\u3011
CTL_Method_Breakpoint_Print_Text=\u3010Method breakpoint hit in {className}.{methodName} at line {lineNumber} by thread {threadName}.\u3011
TTT_ClassExclusionFilter=\u3010Restricts to locations in classes whose names do not match this filter.\u3011
ACSD_L_Line_Breakpoint_Condition=\u3010Condition\u3011
ACSD_L_Exception_Breakpoint_filter_hint=
CTL_Class_Breakpoint_Print_Text=\u3010Class breakpoint hit for class {className}.\u3011
LBL_Field_Breakpoint_Type_Access_or_Modification=\u3010Field Access or Modification\u3011
ACSD_TF_Exception_Breakpoint_Package_Name=\u3010Package name input line\u3011
ACSD_TF_Method_Breakpoint_Condition=
ACSD_L_Class_Breakpoint_Package_Name=
ConditionsPanel.tfCondition.toolTipText=\u3010The conditional expression, that cause the break when it evaluates to true.\u3011
CTL_Java_breakpoint_events_cathegory_name=\u3010JavaFX\u3011
ACSD_CB_Class_Breakpoint_Type=
LBL_Thread_Breakpoint_Type_Start=\u3010Thread Start\u3011
ACSD_L_Field_Breakpoint_Class_Name=
L_Actions_Panel_Suspend=\u3010&Suspend:\u3011
ConditionsPanel.classFilterCheckBox.text=\u3010&Filter on Classes Throwing the Exception\u3011
MSG_NonPositive_Line_Number_Spec=\u3010A positive line number should be specified.\u3011
L_Exception_Breakpoint_filter_hint=\u3010(Enter full name of class of exception or error, e.g.: java.lang.InternalError)\u3011
LBL_Exception_Breakpoint_Type_Uncatched=\u3010Uncaught\u3011
LBL_Class_Breakpoint_Type_Prepare_or_Unload=\u3010Class Load or Unload\u3011
MSG_No_Class_or_Method_Name_Spec=\u3010Class Name and Method Name should be specified.\u3011
TTT_CB_Exception_Breakpoint_Package_Name=\u3010Type name of package here.\u3011
ACSD_CB_HitCount=\u3010Specify the hit count condition.\u3011
ACSN_CB_HitCount=\u3010Hit count condition.\u3011
ACSD_L_Field_Breakpoint_Package_Name=
ACSD_L_Thread_Breakpoint_Type=
TTT_TF_Hit_Count=\u3010Break only when the hit count matches the selected condition.\u3011
L_Class_Breakpoint_Package_Name=\u3010&Package Name:\u3011
LBL_Exception_Breakpoint_Type_Catched_or_Uncatched=\u3010Caught or Uncaught\u3011
TTT_TF_Class_Breakpoint_Package_Name=\u3010Specify name of package.\u3011
LBL_Method_Breakpoint_Type_Entry_or_Exit=\u3010Method Entry or Exit\u3011
ConditionsPanel.cbWhenHitCount.equals=\u3010equals to\u3011
MSG_NonPositive_Hit_Count_Filter_Spec=\u3010A positive hit count filter should be specified.\u3011
ACSD_L_Line_Breakpoint_Line_Number=\u3010Line number\u3011
ACSD_TF_Actions_Panel_Print_Text=
LBL_Method_Breakpoint_Type_Exit=\u3010Method Exit\u3011
ConditionsPanel.classIncludeFilterLabel.text=\u3010&Match Classes:\u3011
ConditionsPanel.cbWhenHitCount.greater=\u3010is greater than\u3011
ACSD_CB_Exception_Breakpoint_Class_Name=
ACSD_L_Method_Breakpoint_Class_Name=
ACSN_CB_Method_Breakpoint_Type=\u3010When to stop on this method.\u3011
CTL_Exception_Breakpoint_Print_Text=\u3010Exception breakpoint hit in {className} at line {lineNumber} by thread {threadName}.\u3011
TTT_CB_Class_Breakpoint_Type=\u3010Select type of event this breakpoint should stop on.\u3011
TTT_TF_Field_Breakpoint_Package_Name=\u3010Enter name of package here.\u3011
ACSD_StopOn_LBL=\u3010The event type this breakpoint should stop on.\u3011
L_Conditions_Breakpoint_BorderTitle=\u3010Conditions\u3011
ASCD_L_Actions_Panel_Suspend=
L_Exception_Breakpoint_Condition=\u3010Co&ndition:\u3011
L_Method_Breakpoint_BorderTitle=\u3010Settings\u3011
ACSD_L_Method_Breakpoint_Condition=
TTT_TF_Actions_Panel_Print_Text=\u3010Text to be printed when breakpoint occurres.\u3011
CTL_Field_Breakpoint_Print_Text=\u3010Field breakpoint hit at line {lineNumber} in class {className} by thread {threadName}.\u3011
ACSD_L_Method_Breakpoint_Package_Name=
LBL_Field_Breakpoint_Type_Access=\u3010Field Access\u3011
ACSD_CB_Field_Breakpoint_Type=
ACSD_TF_Method_Breakpoint_Method_Name=
L_Thread_Breakpoint_BorderTitle=\u3010Settings\u3011
L_Field_Breakpoint_Package_Name=\u3010&Package Name:\u3011
TTT_TF_Method_Breakpoint_Package_Name=\u3010Enter name of package here.\u3011
L_Method_Breakpoint_Class_Name=\u3010&Class Name:\u3011
ACSN_Method_Breakpoint_ClassName=\u3010Class Name\u3011
TTT_TF_Class_Breakpoint_Class_Name=\u3010Specify class name or use '*' for all classes from package.\u3011
ACSD_CB_Method_Breakpoint_All_Methods=
ACSD_L_Exception_Breakpoint_Package_Name=
LBL_Thread_Breakpoint_Type_Start_or_Death=\u3010Thread Start or Death\u3011
ACSD_CB_Class_Breakpoint_Exclusion_Filter=
L_Class_Breakpoint_Class_Name=\u3010&Class Name:\u3011
TTT_CB_Field_Breakpoint_Type=\u3010Select type of breakpoint here.\u3011
ACSD_TF_Method_Breakpoint_Package_Name=
